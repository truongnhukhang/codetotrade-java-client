// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coin_service.proto

// Protobuf Java Version: 3.25.1
package coin.algorithm.grpc.service;

/**
 * Protobuf type {@code coin.algorithm.grpc.service.generated.Candle}
 */
public final class Candle extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:coin.algorithm.grpc.service.generated.Candle)
    CandleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Candle.newBuilder() to construct.
  private Candle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Candle() {
    symbol_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Candle();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_Candle_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_Candle_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Candle.class, Builder.class);
  }

  public static final int STARTTIME_FIELD_NUMBER = 1;
  private long startTime_ = 0L;
  /**
   * <code>int64 startTime = 1;</code>
   * @return The startTime.
   */
  @Override
  public long getStartTime() {
    return startTime_;
  }

  public static final int ENDTIME_FIELD_NUMBER = 2;
  private long endTime_ = 0L;
  /**
   * <code>int64 endTime = 2;</code>
   * @return The endTime.
   */
  @Override
  public long getEndTime() {
    return endTime_;
  }

  public static final int OPEN_FIELD_NUMBER = 3;
  private double open_ = 0D;
  /**
   * <code>double open = 3;</code>
   * @return The open.
   */
  @Override
  public double getOpen() {
    return open_;
  }

  public static final int CLOSE_FIELD_NUMBER = 4;
  private double close_ = 0D;
  /**
   * <code>double close = 4;</code>
   * @return The close.
   */
  @Override
  public double getClose() {
    return close_;
  }

  public static final int HIGH_FIELD_NUMBER = 5;
  private double high_ = 0D;
  /**
   * <code>double high = 5;</code>
   * @return The high.
   */
  @Override
  public double getHigh() {
    return high_;
  }

  public static final int LOW_FIELD_NUMBER = 6;
  private double low_ = 0D;
  /**
   * <code>double low = 6;</code>
   * @return The low.
   */
  @Override
  public double getLow() {
    return low_;
  }

  public static final int VOLUME_FIELD_NUMBER = 7;
  private double volume_ = 0D;
  /**
   * <code>double volume = 7;</code>
   * @return The volume.
   */
  @Override
  public double getVolume() {
    return volume_;
  }

  public static final int DURATION_FIELD_NUMBER = 8;
  private long duration_ = 0L;
  /**
   * <code>int64 duration = 8;</code>
   * @return The duration.
   */
  @Override
  public long getDuration() {
    return duration_;
  }

  public static final int ISCLOSECANDLE_FIELD_NUMBER = 9;
  private boolean isCloseCandle_ = false;
  /**
   * <code>bool isCloseCandle = 9;</code>
   * @return The isCloseCandle.
   */
  @Override
  public boolean getIsCloseCandle() {
    return isCloseCandle_;
  }

  public static final int SYMBOL_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private volatile Object symbol_ = "";
  /**
   * <code>string symbol = 10;</code>
   * @return The symbol.
   */
  @Override
  public String getSymbol() {
    Object ref = symbol_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      symbol_ = s;
      return s;
    }
  }
  /**
   * <code>string symbol = 10;</code>
   * @return The bytes for symbol.
   */
  @Override
  public com.google.protobuf.ByteString
      getSymbolBytes() {
    Object ref = symbol_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      symbol_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (startTime_ != 0L) {
      output.writeInt64(1, startTime_);
    }
    if (endTime_ != 0L) {
      output.writeInt64(2, endTime_);
    }
    if (Double.doubleToRawLongBits(open_) != 0) {
      output.writeDouble(3, open_);
    }
    if (Double.doubleToRawLongBits(close_) != 0) {
      output.writeDouble(4, close_);
    }
    if (Double.doubleToRawLongBits(high_) != 0) {
      output.writeDouble(5, high_);
    }
    if (Double.doubleToRawLongBits(low_) != 0) {
      output.writeDouble(6, low_);
    }
    if (Double.doubleToRawLongBits(volume_) != 0) {
      output.writeDouble(7, volume_);
    }
    if (duration_ != 0L) {
      output.writeInt64(8, duration_);
    }
    if (isCloseCandle_ != false) {
      output.writeBool(9, isCloseCandle_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbol_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, symbol_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (startTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, startTime_);
    }
    if (endTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, endTime_);
    }
    if (Double.doubleToRawLongBits(open_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, open_);
    }
    if (Double.doubleToRawLongBits(close_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, close_);
    }
    if (Double.doubleToRawLongBits(high_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, high_);
    }
    if (Double.doubleToRawLongBits(low_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, low_);
    }
    if (Double.doubleToRawLongBits(volume_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(7, volume_);
    }
    if (duration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, duration_);
    }
    if (isCloseCandle_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, isCloseCandle_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbol_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, symbol_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Candle)) {
      return super.equals(obj);
    }
    Candle other = (Candle) obj;

    if (getStartTime()
        != other.getStartTime()) return false;
    if (getEndTime()
        != other.getEndTime()) return false;
    if (Double.doubleToLongBits(getOpen())
        != Double.doubleToLongBits(
            other.getOpen())) return false;
    if (Double.doubleToLongBits(getClose())
        != Double.doubleToLongBits(
            other.getClose())) return false;
    if (Double.doubleToLongBits(getHigh())
        != Double.doubleToLongBits(
            other.getHigh())) return false;
    if (Double.doubleToLongBits(getLow())
        != Double.doubleToLongBits(
            other.getLow())) return false;
    if (Double.doubleToLongBits(getVolume())
        != Double.doubleToLongBits(
            other.getVolume())) return false;
    if (getDuration()
        != other.getDuration()) return false;
    if (getIsCloseCandle()
        != other.getIsCloseCandle()) return false;
    if (!getSymbol()
        .equals(other.getSymbol())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getStartTime());
    hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEndTime());
    hash = (37 * hash) + OPEN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getOpen()));
    hash = (37 * hash) + CLOSE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getClose()));
    hash = (37 * hash) + HIGH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getHigh()));
    hash = (37 * hash) + LOW_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getLow()));
    hash = (37 * hash) + VOLUME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getVolume()));
    hash = (37 * hash) + DURATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDuration());
    hash = (37 * hash) + ISCLOSECANDLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsCloseCandle());
    hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
    hash = (53 * hash) + getSymbol().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Candle parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Candle parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Candle parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Candle parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Candle parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Candle parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Candle parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Candle parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static Candle parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static Candle parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Candle parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Candle parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Candle prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code coin.algorithm.grpc.service.generated.Candle}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:coin.algorithm.grpc.service.generated.Candle)
      CandleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_Candle_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_Candle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Candle.class, Builder.class);
    }

    // Construct using coin.algorithm.grpc.service.Candle.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      startTime_ = 0L;
      endTime_ = 0L;
      open_ = 0D;
      close_ = 0D;
      high_ = 0D;
      low_ = 0D;
      volume_ = 0D;
      duration_ = 0L;
      isCloseCandle_ = false;
      symbol_ = "";
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_Candle_descriptor;
    }

    @Override
    public Candle getDefaultInstanceForType() {
      return Candle.getDefaultInstance();
    }

    @Override
    public Candle build() {
      Candle result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Candle buildPartial() {
      Candle result = new Candle(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(Candle result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.startTime_ = startTime_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.endTime_ = endTime_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.open_ = open_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.close_ = close_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.high_ = high_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.low_ = low_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.volume_ = volume_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.duration_ = duration_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.isCloseCandle_ = isCloseCandle_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.symbol_ = symbol_;
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Candle) {
        return mergeFrom((Candle)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Candle other) {
      if (other == Candle.getDefaultInstance()) return this;
      if (other.getStartTime() != 0L) {
        setStartTime(other.getStartTime());
      }
      if (other.getEndTime() != 0L) {
        setEndTime(other.getEndTime());
      }
      if (other.getOpen() != 0D) {
        setOpen(other.getOpen());
      }
      if (other.getClose() != 0D) {
        setClose(other.getClose());
      }
      if (other.getHigh() != 0D) {
        setHigh(other.getHigh());
      }
      if (other.getLow() != 0D) {
        setLow(other.getLow());
      }
      if (other.getVolume() != 0D) {
        setVolume(other.getVolume());
      }
      if (other.getDuration() != 0L) {
        setDuration(other.getDuration());
      }
      if (other.getIsCloseCandle() != false) {
        setIsCloseCandle(other.getIsCloseCandle());
      }
      if (!other.getSymbol().isEmpty()) {
        symbol_ = other.symbol_;
        bitField0_ |= 0x00000200;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              startTime_ = input.readInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              endTime_ = input.readInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 25: {
              open_ = input.readDouble();
              bitField0_ |= 0x00000004;
              break;
            } // case 25
            case 33: {
              close_ = input.readDouble();
              bitField0_ |= 0x00000008;
              break;
            } // case 33
            case 41: {
              high_ = input.readDouble();
              bitField0_ |= 0x00000010;
              break;
            } // case 41
            case 49: {
              low_ = input.readDouble();
              bitField0_ |= 0x00000020;
              break;
            } // case 49
            case 57: {
              volume_ = input.readDouble();
              bitField0_ |= 0x00000040;
              break;
            } // case 57
            case 64: {
              duration_ = input.readInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              isCloseCandle_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 82: {
              symbol_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000200;
              break;
            } // case 82
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long startTime_ ;
    /**
     * <code>int64 startTime = 1;</code>
     * @return The startTime.
     */
    @Override
    public long getStartTime() {
      return startTime_;
    }
    /**
     * <code>int64 startTime = 1;</code>
     * @param value The startTime to set.
     * @return This builder for chaining.
     */
    public Builder setStartTime(long value) {

      startTime_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>int64 startTime = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStartTime() {
      bitField0_ = (bitField0_ & ~0x00000001);
      startTime_ = 0L;
      onChanged();
      return this;
    }

    private long endTime_ ;
    /**
     * <code>int64 endTime = 2;</code>
     * @return The endTime.
     */
    @Override
    public long getEndTime() {
      return endTime_;
    }
    /**
     * <code>int64 endTime = 2;</code>
     * @param value The endTime to set.
     * @return This builder for chaining.
     */
    public Builder setEndTime(long value) {

      endTime_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int64 endTime = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      endTime_ = 0L;
      onChanged();
      return this;
    }

    private double open_ ;
    /**
     * <code>double open = 3;</code>
     * @return The open.
     */
    @Override
    public double getOpen() {
      return open_;
    }
    /**
     * <code>double open = 3;</code>
     * @param value The open to set.
     * @return This builder for chaining.
     */
    public Builder setOpen(double value) {

      open_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>double open = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpen() {
      bitField0_ = (bitField0_ & ~0x00000004);
      open_ = 0D;
      onChanged();
      return this;
    }

    private double close_ ;
    /**
     * <code>double close = 4;</code>
     * @return The close.
     */
    @Override
    public double getClose() {
      return close_;
    }
    /**
     * <code>double close = 4;</code>
     * @param value The close to set.
     * @return This builder for chaining.
     */
    public Builder setClose(double value) {

      close_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>double close = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearClose() {
      bitField0_ = (bitField0_ & ~0x00000008);
      close_ = 0D;
      onChanged();
      return this;
    }

    private double high_ ;
    /**
     * <code>double high = 5;</code>
     * @return The high.
     */
    @Override
    public double getHigh() {
      return high_;
    }
    /**
     * <code>double high = 5;</code>
     * @param value The high to set.
     * @return This builder for chaining.
     */
    public Builder setHigh(double value) {

      high_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>double high = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearHigh() {
      bitField0_ = (bitField0_ & ~0x00000010);
      high_ = 0D;
      onChanged();
      return this;
    }

    private double low_ ;
    /**
     * <code>double low = 6;</code>
     * @return The low.
     */
    @Override
    public double getLow() {
      return low_;
    }
    /**
     * <code>double low = 6;</code>
     * @param value The low to set.
     * @return This builder for chaining.
     */
    public Builder setLow(double value) {

      low_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>double low = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearLow() {
      bitField0_ = (bitField0_ & ~0x00000020);
      low_ = 0D;
      onChanged();
      return this;
    }

    private double volume_ ;
    /**
     * <code>double volume = 7;</code>
     * @return The volume.
     */
    @Override
    public double getVolume() {
      return volume_;
    }
    /**
     * <code>double volume = 7;</code>
     * @param value The volume to set.
     * @return This builder for chaining.
     */
    public Builder setVolume(double value) {

      volume_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>double volume = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearVolume() {
      bitField0_ = (bitField0_ & ~0x00000040);
      volume_ = 0D;
      onChanged();
      return this;
    }

    private long duration_ ;
    /**
     * <code>int64 duration = 8;</code>
     * @return The duration.
     */
    @Override
    public long getDuration() {
      return duration_;
    }
    /**
     * <code>int64 duration = 8;</code>
     * @param value The duration to set.
     * @return This builder for chaining.
     */
    public Builder setDuration(long value) {

      duration_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>int64 duration = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearDuration() {
      bitField0_ = (bitField0_ & ~0x00000080);
      duration_ = 0L;
      onChanged();
      return this;
    }

    private boolean isCloseCandle_ ;
    /**
     * <code>bool isCloseCandle = 9;</code>
     * @return The isCloseCandle.
     */
    @Override
    public boolean getIsCloseCandle() {
      return isCloseCandle_;
    }
    /**
     * <code>bool isCloseCandle = 9;</code>
     * @param value The isCloseCandle to set.
     * @return This builder for chaining.
     */
    public Builder setIsCloseCandle(boolean value) {

      isCloseCandle_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>bool isCloseCandle = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsCloseCandle() {
      bitField0_ = (bitField0_ & ~0x00000100);
      isCloseCandle_ = false;
      onChanged();
      return this;
    }

    private Object symbol_ = "";
    /**
     * <code>string symbol = 10;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string symbol = 10;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string symbol = 10;</code>
     * @param value The symbol to set.
     * @return This builder for chaining.
     */
    public Builder setSymbol(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      symbol_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <code>string symbol = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearSymbol() {
      symbol_ = getDefaultInstance().getSymbol();
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }
    /**
     * <code>string symbol = 10;</code>
     * @param value The bytes for symbol to set.
     * @return This builder for chaining.
     */
    public Builder setSymbolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      symbol_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:coin.algorithm.grpc.service.generated.Candle)
  }

  // @@protoc_insertion_point(class_scope:coin.algorithm.grpc.service.generated.Candle)
  private static final Candle DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Candle();
  }

  public static Candle getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Candle>
      PARSER = new com.google.protobuf.AbstractParser<Candle>() {
    @Override
    public Candle parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Candle> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Candle> getParserForType() {
    return PARSER;
  }

  @Override
  public Candle getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

