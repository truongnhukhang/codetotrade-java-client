// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coin_service.proto

// Protobuf Java Version: 3.25.1
package coin.algorithm.grpc.service;

/**
 * Protobuf type {@code coin.algorithm.grpc.service.generated.CreateOnlineResponse}
 */
public final class CreateOnlineResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:coin.algorithm.grpc.service.generated.CreateOnlineResponse)
    CreateOnlineResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CreateOnlineResponse.newBuilder() to construct.
  private CreateOnlineResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CreateOnlineResponse() {
    onlineId_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new CreateOnlineResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineResponse_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 3:
        return internalGetCandleMap();
      case 4:
        return internalGetBtcDomCandleMap();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            CreateOnlineResponse.class, Builder.class);
  }

  private int bitField0_;
  public static final int ONLINEID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile Object onlineId_ = "";
  /**
   * <code>string onlineId = 1;</code>
   * @return The onlineId.
   */
  @Override
  public String getOnlineId() {
    Object ref = onlineId_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      onlineId_ = s;
      return s;
    }
  }
  /**
   * <code>string onlineId = 1;</code>
   * @return The bytes for onlineId.
   */
  @Override
  public com.google.protobuf.ByteString
      getOnlineIdBytes() {
    Object ref = onlineId_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      onlineId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CANDLES_FIELD_NUMBER = 2;
  private Candles candles_;
  /**
   * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
   * @return Whether the candles field is set.
   */
  @Override
  public boolean hasCandles() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
   * @return The candles.
   */
  @Override
  public Candles getCandles() {
    return candles_ == null ? Candles.getDefaultInstance() : candles_;
  }
  /**
   * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
   */
  @Override
  public CandlesOrBuilder getCandlesOrBuilder() {
    return candles_ == null ? Candles.getDefaultInstance() : candles_;
  }

  public static final int CANDLEMAP_FIELD_NUMBER = 3;
  private static final class CandleMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        Integer, Candles> defaultEntry =
            com.google.protobuf.MapEntry
            .<Integer, Candles>newDefaultInstance(
                CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineResponse_CandleMapEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                Candles.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      Integer, Candles> candleMap_;
  private com.google.protobuf.MapField<Integer, Candles>
  internalGetCandleMap() {
    if (candleMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          CandleMapDefaultEntryHolder.defaultEntry);
    }
    return candleMap_;
  }
  public int getCandleMapCount() {
    return internalGetCandleMap().getMap().size();
  }
  /**
   * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
   */
  @Override
  public boolean containsCandleMap(
      int key) {

    return internalGetCandleMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getCandleMapMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<Integer, Candles> getCandleMap() {
    return getCandleMapMap();
  }
  /**
   * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
   */
  @Override
  public java.util.Map<Integer, Candles> getCandleMapMap() {
    return internalGetCandleMap().getMap();
  }
  /**
   * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
   */
  @Override
  public /* nullable */
Candles getCandleMapOrDefault(
      int key,
      /* nullable */
Candles defaultValue) {

    java.util.Map<Integer, Candles> map =
        internalGetCandleMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
   */
  @Override
  public Candles getCandleMapOrThrow(
      int key) {

    java.util.Map<Integer, Candles> map =
        internalGetCandleMap().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int BTCDOMCANDLEMAP_FIELD_NUMBER = 4;
  private static final class BtcDomCandleMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        Integer, Candles> defaultEntry =
            com.google.protobuf.MapEntry
            .<Integer, Candles>newDefaultInstance(
                CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineResponse_BtcDomCandleMapEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                Candles.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      Integer, Candles> btcDomCandleMap_;
  private com.google.protobuf.MapField<Integer, Candles>
  internalGetBtcDomCandleMap() {
    if (btcDomCandleMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          BtcDomCandleMapDefaultEntryHolder.defaultEntry);
    }
    return btcDomCandleMap_;
  }
  public int getBtcDomCandleMapCount() {
    return internalGetBtcDomCandleMap().getMap().size();
  }
  /**
   * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
   */
  @Override
  public boolean containsBtcDomCandleMap(
      int key) {

    return internalGetBtcDomCandleMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getBtcDomCandleMapMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<Integer, Candles> getBtcDomCandleMap() {
    return getBtcDomCandleMapMap();
  }
  /**
   * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
   */
  @Override
  public java.util.Map<Integer, Candles> getBtcDomCandleMapMap() {
    return internalGetBtcDomCandleMap().getMap();
  }
  /**
   * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
   */
  @Override
  public /* nullable */
Candles getBtcDomCandleMapOrDefault(
      int key,
      /* nullable */
Candles defaultValue) {

    java.util.Map<Integer, Candles> map =
        internalGetBtcDomCandleMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
   */
  @Override
  public Candles getBtcDomCandleMapOrThrow(
      int key) {

    java.util.Map<Integer, Candles> map =
        internalGetBtcDomCandleMap().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(onlineId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, onlineId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getCandles());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetCandleMap(),
        CandleMapDefaultEntryHolder.defaultEntry,
        3);
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetBtcDomCandleMap(),
        BtcDomCandleMapDefaultEntryHolder.defaultEntry,
        4);
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(onlineId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, onlineId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getCandles());
    }
    for (java.util.Map.Entry<Integer, Candles> entry
         : internalGetCandleMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<Integer, Candles>
      candleMap__ = CandleMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, candleMap__);
    }
    for (java.util.Map.Entry<Integer, Candles> entry
         : internalGetBtcDomCandleMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<Integer, Candles>
      btcDomCandleMap__ = BtcDomCandleMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, btcDomCandleMap__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof CreateOnlineResponse)) {
      return super.equals(obj);
    }
    CreateOnlineResponse other = (CreateOnlineResponse) obj;

    if (!getOnlineId()
        .equals(other.getOnlineId())) return false;
    if (hasCandles() != other.hasCandles()) return false;
    if (hasCandles()) {
      if (!getCandles()
          .equals(other.getCandles())) return false;
    }
    if (!internalGetCandleMap().equals(
        other.internalGetCandleMap())) return false;
    if (!internalGetBtcDomCandleMap().equals(
        other.internalGetBtcDomCandleMap())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ONLINEID_FIELD_NUMBER;
    hash = (53 * hash) + getOnlineId().hashCode();
    if (hasCandles()) {
      hash = (37 * hash) + CANDLES_FIELD_NUMBER;
      hash = (53 * hash) + getCandles().hashCode();
    }
    if (!internalGetCandleMap().getMap().isEmpty()) {
      hash = (37 * hash) + CANDLEMAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetCandleMap().hashCode();
    }
    if (!internalGetBtcDomCandleMap().getMap().isEmpty()) {
      hash = (37 * hash) + BTCDOMCANDLEMAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetBtcDomCandleMap().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static CreateOnlineResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CreateOnlineResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CreateOnlineResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CreateOnlineResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CreateOnlineResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CreateOnlineResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CreateOnlineResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static CreateOnlineResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static CreateOnlineResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static CreateOnlineResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static CreateOnlineResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static CreateOnlineResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(CreateOnlineResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code coin.algorithm.grpc.service.generated.CreateOnlineResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:coin.algorithm.grpc.service.generated.CreateOnlineResponse)
      CreateOnlineResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 3:
          return internalGetCandleMap();
        case 4:
          return internalGetBtcDomCandleMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableCandleMap();
        case 4:
          return internalGetMutableBtcDomCandleMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CreateOnlineResponse.class, Builder.class);
    }

    // Construct using coin.algorithm.grpc.service.CreateOnlineResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCandlesFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      onlineId_ = "";
      candles_ = null;
      if (candlesBuilder_ != null) {
        candlesBuilder_.dispose();
        candlesBuilder_ = null;
      }
      internalGetMutableCandleMap().clear();
      internalGetMutableBtcDomCandleMap().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineResponse_descriptor;
    }

    @Override
    public CreateOnlineResponse getDefaultInstanceForType() {
      return CreateOnlineResponse.getDefaultInstance();
    }

    @Override
    public CreateOnlineResponse build() {
      CreateOnlineResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public CreateOnlineResponse buildPartial() {
      CreateOnlineResponse result = new CreateOnlineResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(CreateOnlineResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.onlineId_ = onlineId_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.candles_ = candlesBuilder_ == null
            ? candles_
            : candlesBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.candleMap_ = internalGetCandleMap().build(CandleMapDefaultEntryHolder.defaultEntry);
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.btcDomCandleMap_ = internalGetBtcDomCandleMap().build(BtcDomCandleMapDefaultEntryHolder.defaultEntry);
      }
      result.bitField0_ |= to_bitField0_;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof CreateOnlineResponse) {
        return mergeFrom((CreateOnlineResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(CreateOnlineResponse other) {
      if (other == CreateOnlineResponse.getDefaultInstance()) return this;
      if (!other.getOnlineId().isEmpty()) {
        onlineId_ = other.onlineId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasCandles()) {
        mergeCandles(other.getCandles());
      }
      internalGetMutableCandleMap().mergeFrom(
          other.internalGetCandleMap());
      bitField0_ |= 0x00000004;
      internalGetMutableBtcDomCandleMap().mergeFrom(
          other.internalGetBtcDomCandleMap());
      bitField0_ |= 0x00000008;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              onlineId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getCandlesFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.google.protobuf.MapEntry<Integer, Candles>
              candleMap__ = input.readMessage(
                  CandleMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableCandleMap().ensureBuilderMap().put(
                  candleMap__.getKey(), candleMap__.getValue());
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.google.protobuf.MapEntry<Integer, Candles>
              btcDomCandleMap__ = input.readMessage(
                  BtcDomCandleMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableBtcDomCandleMap().ensureBuilderMap().put(
                  btcDomCandleMap__.getKey(), btcDomCandleMap__.getValue());
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private Object onlineId_ = "";
    /**
     * <code>string onlineId = 1;</code>
     * @return The onlineId.
     */
    public String getOnlineId() {
      Object ref = onlineId_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        onlineId_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string onlineId = 1;</code>
     * @return The bytes for onlineId.
     */
    public com.google.protobuf.ByteString
        getOnlineIdBytes() {
      Object ref = onlineId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        onlineId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string onlineId = 1;</code>
     * @param value The onlineId to set.
     * @return This builder for chaining.
     */
    public Builder setOnlineId(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      onlineId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string onlineId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearOnlineId() {
      onlineId_ = getDefaultInstance().getOnlineId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string onlineId = 1;</code>
     * @param value The bytes for onlineId to set.
     * @return This builder for chaining.
     */
    public Builder setOnlineIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      onlineId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private Candles candles_;
    private com.google.protobuf.SingleFieldBuilderV3<
        Candles, Candles.Builder, CandlesOrBuilder> candlesBuilder_;
    /**
     * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
     * @return Whether the candles field is set.
     */
    public boolean hasCandles() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
     * @return The candles.
     */
    public Candles getCandles() {
      if (candlesBuilder_ == null) {
        return candles_ == null ? Candles.getDefaultInstance() : candles_;
      } else {
        return candlesBuilder_.getMessage();
      }
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
     */
    public Builder setCandles(Candles value) {
      if (candlesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        candles_ = value;
      } else {
        candlesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
     */
    public Builder setCandles(
        Candles.Builder builderForValue) {
      if (candlesBuilder_ == null) {
        candles_ = builderForValue.build();
      } else {
        candlesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
     */
    public Builder mergeCandles(Candles value) {
      if (candlesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          candles_ != null &&
          candles_ != Candles.getDefaultInstance()) {
          getCandlesBuilder().mergeFrom(value);
        } else {
          candles_ = value;
        }
      } else {
        candlesBuilder_.mergeFrom(value);
      }
      if (candles_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
     */
    public Builder clearCandles() {
      bitField0_ = (bitField0_ & ~0x00000002);
      candles_ = null;
      if (candlesBuilder_ != null) {
        candlesBuilder_.dispose();
        candlesBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
     */
    public Candles.Builder getCandlesBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getCandlesFieldBuilder().getBuilder();
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
     */
    public CandlesOrBuilder getCandlesOrBuilder() {
      if (candlesBuilder_ != null) {
        return candlesBuilder_.getMessageOrBuilder();
      } else {
        return candles_ == null ?
            Candles.getDefaultInstance() : candles_;
      }
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.Candles candles = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        Candles, Candles.Builder, CandlesOrBuilder>
        getCandlesFieldBuilder() {
      if (candlesBuilder_ == null) {
        candlesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            Candles, Candles.Builder, CandlesOrBuilder>(
                getCandles(),
                getParentForChildren(),
                isClean());
        candles_ = null;
      }
      return candlesBuilder_;
    }

    private static final class CandleMapConverter implements com.google.protobuf.MapFieldBuilder.Converter<Integer, CandlesOrBuilder, Candles> {
      @Override
      public Candles build(CandlesOrBuilder val) {
        if (val instanceof Candles) { return (Candles) val; }
        return ((Candles.Builder) val).build();
      }

      @Override
      public com.google.protobuf.MapEntry<Integer, Candles> defaultEntry() {
        return CandleMapDefaultEntryHolder.defaultEntry;
      }
    };
    private static final CandleMapConverter candleMapConverter = new CandleMapConverter();

    private com.google.protobuf.MapFieldBuilder<
        Integer, CandlesOrBuilder, Candles, Candles.Builder> candleMap_;
    private com.google.protobuf.MapFieldBuilder<Integer, CandlesOrBuilder, Candles, Candles.Builder>
        internalGetCandleMap() {
      if (candleMap_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(candleMapConverter);
      }
      return candleMap_;
    }
    private com.google.protobuf.MapFieldBuilder<Integer, CandlesOrBuilder, Candles, Candles.Builder>
        internalGetMutableCandleMap() {
      if (candleMap_ == null) {
        candleMap_ = new com.google.protobuf.MapFieldBuilder<>(candleMapConverter);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return candleMap_;
    }
    public int getCandleMapCount() {
      return internalGetCandleMap().ensureBuilderMap().size();
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
     */
    @Override
    public boolean containsCandleMap(
        int key) {

      return internalGetCandleMap().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getCandleMapMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, Candles> getCandleMap() {
      return getCandleMapMap();
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
     */
    @Override
    public java.util.Map<Integer, Candles> getCandleMapMap() {
      return internalGetCandleMap().getImmutableMap();
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
     */
    @Override
    public /* nullable */
Candles getCandleMapOrDefault(
        int key,
        /* nullable */
Candles defaultValue) {

      java.util.Map<Integer, CandlesOrBuilder> map = internalGetMutableCandleMap().ensureBuilderMap();
      return map.containsKey(key) ? candleMapConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
     */
    @Override
    public Candles getCandleMapOrThrow(
        int key) {

      java.util.Map<Integer, CandlesOrBuilder> map = internalGetMutableCandleMap().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return candleMapConverter.build(map.get(key));
    }
    public Builder clearCandleMap() {
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutableCandleMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
     */
    public Builder removeCandleMap(
        int key) {

      internalGetMutableCandleMap().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<Integer, Candles>
        getMutableCandleMap() {
      bitField0_ |= 0x00000004;
      return internalGetMutableCandleMap().ensureMessageMap();
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
     */
    public Builder putCandleMap(
        int key,
        Candles value) {

      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableCandleMap().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
     */
    public Builder putAllCandleMap(
        java.util.Map<Integer, Candles> values) {
      for (java.util.Map.Entry<Integer, Candles> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableCandleMap().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; candleMap = 3;</code>
     */
    public Candles.Builder putCandleMapBuilderIfAbsent(
        int key) {
      java.util.Map<Integer, CandlesOrBuilder> builderMap = internalGetMutableCandleMap().ensureBuilderMap();
      CandlesOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = Candles.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof Candles) {
        entry = ((Candles) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (Candles.Builder) entry;
    }

    private static final class BtcDomCandleMapConverter implements com.google.protobuf.MapFieldBuilder.Converter<Integer, CandlesOrBuilder, Candles> {
      @Override
      public Candles build(CandlesOrBuilder val) {
        if (val instanceof Candles) { return (Candles) val; }
        return ((Candles.Builder) val).build();
      }

      @Override
      public com.google.protobuf.MapEntry<Integer, Candles> defaultEntry() {
        return BtcDomCandleMapDefaultEntryHolder.defaultEntry;
      }
    };
    private static final BtcDomCandleMapConverter btcDomCandleMapConverter = new BtcDomCandleMapConverter();

    private com.google.protobuf.MapFieldBuilder<
        Integer, CandlesOrBuilder, Candles, Candles.Builder> btcDomCandleMap_;
    private com.google.protobuf.MapFieldBuilder<Integer, CandlesOrBuilder, Candles, Candles.Builder>
        internalGetBtcDomCandleMap() {
      if (btcDomCandleMap_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(btcDomCandleMapConverter);
      }
      return btcDomCandleMap_;
    }
    private com.google.protobuf.MapFieldBuilder<Integer, CandlesOrBuilder, Candles, Candles.Builder>
        internalGetMutableBtcDomCandleMap() {
      if (btcDomCandleMap_ == null) {
        btcDomCandleMap_ = new com.google.protobuf.MapFieldBuilder<>(btcDomCandleMapConverter);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return btcDomCandleMap_;
    }
    public int getBtcDomCandleMapCount() {
      return internalGetBtcDomCandleMap().ensureBuilderMap().size();
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
     */
    @Override
    public boolean containsBtcDomCandleMap(
        int key) {

      return internalGetBtcDomCandleMap().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getBtcDomCandleMapMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, Candles> getBtcDomCandleMap() {
      return getBtcDomCandleMapMap();
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
     */
    @Override
    public java.util.Map<Integer, Candles> getBtcDomCandleMapMap() {
      return internalGetBtcDomCandleMap().getImmutableMap();
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
     */
    @Override
    public /* nullable */
Candles getBtcDomCandleMapOrDefault(
        int key,
        /* nullable */
Candles defaultValue) {

      java.util.Map<Integer, CandlesOrBuilder> map = internalGetMutableBtcDomCandleMap().ensureBuilderMap();
      return map.containsKey(key) ? btcDomCandleMapConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
     */
    @Override
    public Candles getBtcDomCandleMapOrThrow(
        int key) {

      java.util.Map<Integer, CandlesOrBuilder> map = internalGetMutableBtcDomCandleMap().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return btcDomCandleMapConverter.build(map.get(key));
    }
    public Builder clearBtcDomCandleMap() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableBtcDomCandleMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
     */
    public Builder removeBtcDomCandleMap(
        int key) {

      internalGetMutableBtcDomCandleMap().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<Integer, Candles>
        getMutableBtcDomCandleMap() {
      bitField0_ |= 0x00000008;
      return internalGetMutableBtcDomCandleMap().ensureMessageMap();
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
     */
    public Builder putBtcDomCandleMap(
        int key,
        Candles value) {

      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableBtcDomCandleMap().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
     */
    public Builder putAllBtcDomCandleMap(
        java.util.Map<Integer, Candles> values) {
      for (java.util.Map.Entry<Integer, Candles> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableBtcDomCandleMap().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>map&lt;int32, .coin.algorithm.grpc.service.generated.Candles&gt; btcDomCandleMap = 4;</code>
     */
    public Candles.Builder putBtcDomCandleMapBuilderIfAbsent(
        int key) {
      java.util.Map<Integer, CandlesOrBuilder> builderMap = internalGetMutableBtcDomCandleMap().ensureBuilderMap();
      CandlesOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = Candles.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof Candles) {
        entry = ((Candles) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (Candles.Builder) entry;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:coin.algorithm.grpc.service.generated.CreateOnlineResponse)
  }

  // @@protoc_insertion_point(class_scope:coin.algorithm.grpc.service.generated.CreateOnlineResponse)
  private static final CreateOnlineResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new CreateOnlineResponse();
  }

  public static CreateOnlineResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreateOnlineResponse>
      PARSER = new com.google.protobuf.AbstractParser<CreateOnlineResponse>() {
    @Override
    public CreateOnlineResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CreateOnlineResponse> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<CreateOnlineResponse> getParserForType() {
    return PARSER;
  }

  @Override
  public CreateOnlineResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

