// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coin_service.proto

// Protobuf Java Version: 3.25.1
package coin.algorithm.grpc.service;

/**
 * Protobuf type {@code coin.algorithm.grpc.service.generated.Chart}
 */
public final class Chart extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:coin.algorithm.grpc.service.generated.Chart)
    ChartOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Chart.newBuilder() to construct.
  private Chart(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Chart() {
    name_ = "";
    backgroundColor_ = "";
    plotList_ = java.util.Collections.emptyList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Chart();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_Chart_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_Chart_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Chart.class, Builder.class);
  }

  public static final int ISOVERLAY_FIELD_NUMBER = 1;
  private boolean isOverlay_ = false;
  /**
   * <code>bool isOverlay = 1;</code>
   * @return The isOverlay.
   */
  @Override
  public boolean getIsOverlay() {
    return isOverlay_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile Object name_ = "";
  /**
   * <code>string name = 2;</code>
   * @return The name.
   */
  @Override
  public String getName() {
    Object ref = name_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  @Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    Object ref = name_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BACKGROUNDCOLOR_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile Object backgroundColor_ = "";
  /**
   * <code>string backgroundColor = 3;</code>
   * @return The backgroundColor.
   */
  @Override
  public String getBackgroundColor() {
    Object ref = backgroundColor_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      backgroundColor_ = s;
      return s;
    }
  }
  /**
   * <code>string backgroundColor = 3;</code>
   * @return The bytes for backgroundColor.
   */
  @Override
  public com.google.protobuf.ByteString
      getBackgroundColorBytes() {
    Object ref = backgroundColor_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      backgroundColor_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WIDTH_FIELD_NUMBER = 4;
  private int width_ = 0;
  /**
   * <code>int32 width = 4;</code>
   * @return The width.
   */
  @Override
  public int getWidth() {
    return width_;
  }

  public static final int HEIGHT_FIELD_NUMBER = 5;
  private int height_ = 0;
  /**
   * <code>int32 height = 5;</code>
   * @return The height.
   */
  @Override
  public int getHeight() {
    return height_;
  }

  public static final int PLOTLIST_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<Plot> plotList_;
  /**
   * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
   */
  @Override
  public java.util.List<Plot> getPlotListList() {
    return plotList_;
  }
  /**
   * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
   */
  @Override
  public java.util.List<? extends PlotOrBuilder>
      getPlotListOrBuilderList() {
    return plotList_;
  }
  /**
   * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
   */
  @Override
  public int getPlotListCount() {
    return plotList_.size();
  }
  /**
   * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
   */
  @Override
  public Plot getPlotList(int index) {
    return plotList_.get(index);
  }
  /**
   * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
   */
  @Override
  public PlotOrBuilder getPlotListOrBuilder(
      int index) {
    return plotList_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (isOverlay_ != false) {
      output.writeBool(1, isOverlay_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(backgroundColor_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, backgroundColor_);
    }
    if (width_ != 0) {
      output.writeInt32(4, width_);
    }
    if (height_ != 0) {
      output.writeInt32(5, height_);
    }
    for (int i = 0; i < plotList_.size(); i++) {
      output.writeMessage(6, plotList_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (isOverlay_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, isOverlay_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(backgroundColor_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, backgroundColor_);
    }
    if (width_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, width_);
    }
    if (height_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, height_);
    }
    for (int i = 0; i < plotList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, plotList_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Chart)) {
      return super.equals(obj);
    }
    Chart other = (Chart) obj;

    if (getIsOverlay()
        != other.getIsOverlay()) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getBackgroundColor()
        .equals(other.getBackgroundColor())) return false;
    if (getWidth()
        != other.getWidth()) return false;
    if (getHeight()
        != other.getHeight()) return false;
    if (!getPlotListList()
        .equals(other.getPlotListList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ISOVERLAY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsOverlay());
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + BACKGROUNDCOLOR_FIELD_NUMBER;
    hash = (53 * hash) + getBackgroundColor().hashCode();
    hash = (37 * hash) + WIDTH_FIELD_NUMBER;
    hash = (53 * hash) + getWidth();
    hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
    hash = (53 * hash) + getHeight();
    if (getPlotListCount() > 0) {
      hash = (37 * hash) + PLOTLIST_FIELD_NUMBER;
      hash = (53 * hash) + getPlotListList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Chart parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Chart parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Chart parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Chart parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Chart parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Chart parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Chart parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Chart parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static Chart parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static Chart parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Chart parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Chart parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Chart prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code coin.algorithm.grpc.service.generated.Chart}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:coin.algorithm.grpc.service.generated.Chart)
      ChartOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_Chart_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_Chart_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Chart.class, Builder.class);
    }

    // Construct using coin.algorithm.grpc.service.Chart.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      isOverlay_ = false;
      name_ = "";
      backgroundColor_ = "";
      width_ = 0;
      height_ = 0;
      if (plotListBuilder_ == null) {
        plotList_ = java.util.Collections.emptyList();
      } else {
        plotList_ = null;
        plotListBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_Chart_descriptor;
    }

    @Override
    public Chart getDefaultInstanceForType() {
      return Chart.getDefaultInstance();
    }

    @Override
    public Chart build() {
      Chart result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Chart buildPartial() {
      Chart result = new Chart(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(Chart result) {
      if (plotListBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          plotList_ = java.util.Collections.unmodifiableList(plotList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.plotList_ = plotList_;
      } else {
        result.plotList_ = plotListBuilder_.build();
      }
    }

    private void buildPartial0(Chart result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.isOverlay_ = isOverlay_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.backgroundColor_ = backgroundColor_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.width_ = width_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.height_ = height_;
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Chart) {
        return mergeFrom((Chart)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Chart other) {
      if (other == Chart.getDefaultInstance()) return this;
      if (other.getIsOverlay() != false) {
        setIsOverlay(other.getIsOverlay());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getBackgroundColor().isEmpty()) {
        backgroundColor_ = other.backgroundColor_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.getWidth() != 0) {
        setWidth(other.getWidth());
      }
      if (other.getHeight() != 0) {
        setHeight(other.getHeight());
      }
      if (plotListBuilder_ == null) {
        if (!other.plotList_.isEmpty()) {
          if (plotList_.isEmpty()) {
            plotList_ = other.plotList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePlotListIsMutable();
            plotList_.addAll(other.plotList_);
          }
          onChanged();
        }
      } else {
        if (!other.plotList_.isEmpty()) {
          if (plotListBuilder_.isEmpty()) {
            plotListBuilder_.dispose();
            plotListBuilder_ = null;
            plotList_ = other.plotList_;
            bitField0_ = (bitField0_ & ~0x00000020);
            plotListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPlotListFieldBuilder() : null;
          } else {
            plotListBuilder_.addAllMessages(other.plotList_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              isOverlay_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              backgroundColor_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              width_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              height_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              Plot m =
                  input.readMessage(
                      Plot.parser(),
                      extensionRegistry);
              if (plotListBuilder_ == null) {
                ensurePlotListIsMutable();
                plotList_.add(m);
              } else {
                plotListBuilder_.addMessage(m);
              }
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean isOverlay_ ;
    /**
     * <code>bool isOverlay = 1;</code>
     * @return The isOverlay.
     */
    @Override
    public boolean getIsOverlay() {
      return isOverlay_;
    }
    /**
     * <code>bool isOverlay = 1;</code>
     * @param value The isOverlay to set.
     * @return This builder for chaining.
     */
    public Builder setIsOverlay(boolean value) {

      isOverlay_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>bool isOverlay = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsOverlay() {
      bitField0_ = (bitField0_ & ~0x00000001);
      isOverlay_ = false;
      onChanged();
      return this;
    }

    private Object name_ = "";
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    public String getName() {
      Object ref = name_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private Object backgroundColor_ = "";
    /**
     * <code>string backgroundColor = 3;</code>
     * @return The backgroundColor.
     */
    public String getBackgroundColor() {
      Object ref = backgroundColor_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        backgroundColor_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string backgroundColor = 3;</code>
     * @return The bytes for backgroundColor.
     */
    public com.google.protobuf.ByteString
        getBackgroundColorBytes() {
      Object ref = backgroundColor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        backgroundColor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string backgroundColor = 3;</code>
     * @param value The backgroundColor to set.
     * @return This builder for chaining.
     */
    public Builder setBackgroundColor(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      backgroundColor_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>string backgroundColor = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearBackgroundColor() {
      backgroundColor_ = getDefaultInstance().getBackgroundColor();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>string backgroundColor = 3;</code>
     * @param value The bytes for backgroundColor to set.
     * @return This builder for chaining.
     */
    public Builder setBackgroundColorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      backgroundColor_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private int width_ ;
    /**
     * <code>int32 width = 4;</code>
     * @return The width.
     */
    @Override
    public int getWidth() {
      return width_;
    }
    /**
     * <code>int32 width = 4;</code>
     * @param value The width to set.
     * @return This builder for chaining.
     */
    public Builder setWidth(int value) {

      width_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int32 width = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearWidth() {
      bitField0_ = (bitField0_ & ~0x00000008);
      width_ = 0;
      onChanged();
      return this;
    }

    private int height_ ;
    /**
     * <code>int32 height = 5;</code>
     * @return The height.
     */
    @Override
    public int getHeight() {
      return height_;
    }
    /**
     * <code>int32 height = 5;</code>
     * @param value The height to set.
     * @return This builder for chaining.
     */
    public Builder setHeight(int value) {

      height_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int32 height = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearHeight() {
      bitField0_ = (bitField0_ & ~0x00000010);
      height_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<Plot> plotList_ =
      java.util.Collections.emptyList();
    private void ensurePlotListIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        plotList_ = new java.util.ArrayList<Plot>(plotList_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        Plot, Plot.Builder, PlotOrBuilder> plotListBuilder_;

    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public java.util.List<Plot> getPlotListList() {
      if (plotListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(plotList_);
      } else {
        return plotListBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public int getPlotListCount() {
      if (plotListBuilder_ == null) {
        return plotList_.size();
      } else {
        return plotListBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Plot getPlotList(int index) {
      if (plotListBuilder_ == null) {
        return plotList_.get(index);
      } else {
        return plotListBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Builder setPlotList(
        int index, Plot value) {
      if (plotListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlotListIsMutable();
        plotList_.set(index, value);
        onChanged();
      } else {
        plotListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Builder setPlotList(
        int index, Plot.Builder builderForValue) {
      if (plotListBuilder_ == null) {
        ensurePlotListIsMutable();
        plotList_.set(index, builderForValue.build());
        onChanged();
      } else {
        plotListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Builder addPlotList(Plot value) {
      if (plotListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlotListIsMutable();
        plotList_.add(value);
        onChanged();
      } else {
        plotListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Builder addPlotList(
        int index, Plot value) {
      if (plotListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlotListIsMutable();
        plotList_.add(index, value);
        onChanged();
      } else {
        plotListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Builder addPlotList(
        Plot.Builder builderForValue) {
      if (plotListBuilder_ == null) {
        ensurePlotListIsMutable();
        plotList_.add(builderForValue.build());
        onChanged();
      } else {
        plotListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Builder addPlotList(
        int index, Plot.Builder builderForValue) {
      if (plotListBuilder_ == null) {
        ensurePlotListIsMutable();
        plotList_.add(index, builderForValue.build());
        onChanged();
      } else {
        plotListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Builder addAllPlotList(
        Iterable<? extends Plot> values) {
      if (plotListBuilder_ == null) {
        ensurePlotListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, plotList_);
        onChanged();
      } else {
        plotListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Builder clearPlotList() {
      if (plotListBuilder_ == null) {
        plotList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        plotListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Builder removePlotList(int index) {
      if (plotListBuilder_ == null) {
        ensurePlotListIsMutable();
        plotList_.remove(index);
        onChanged();
      } else {
        plotListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Plot.Builder getPlotListBuilder(
        int index) {
      return getPlotListFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public PlotOrBuilder getPlotListOrBuilder(
        int index) {
      if (plotListBuilder_ == null) {
        return plotList_.get(index);  } else {
        return plotListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public java.util.List<? extends PlotOrBuilder>
         getPlotListOrBuilderList() {
      if (plotListBuilder_ != null) {
        return plotListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(plotList_);
      }
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Plot.Builder addPlotListBuilder() {
      return getPlotListFieldBuilder().addBuilder(
          Plot.getDefaultInstance());
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public Plot.Builder addPlotListBuilder(
        int index) {
      return getPlotListFieldBuilder().addBuilder(
          index, Plot.getDefaultInstance());
    }
    /**
     * <code>repeated .coin.algorithm.grpc.service.generated.Plot plotList = 6;</code>
     */
    public java.util.List<Plot.Builder>
         getPlotListBuilderList() {
      return getPlotListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        Plot, Plot.Builder, PlotOrBuilder>
        getPlotListFieldBuilder() {
      if (plotListBuilder_ == null) {
        plotListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            Plot, Plot.Builder, PlotOrBuilder>(
                plotList_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        plotList_ = null;
      }
      return plotListBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:coin.algorithm.grpc.service.generated.Chart)
  }

  // @@protoc_insertion_point(class_scope:coin.algorithm.grpc.service.generated.Chart)
  private static final Chart DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Chart();
  }

  public static Chart getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Chart>
      PARSER = new com.google.protobuf.AbstractParser<Chart>() {
    @Override
    public Chart parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Chart> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Chart> getParserForType() {
    return PARSER;
  }

  @Override
  public Chart getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

