// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coin_service.proto

// Protobuf Java Version: 3.25.1
package coin.algorithm.grpc.service;

/**
 * Protobuf type {@code coin.algorithm.grpc.service.generated.Plot}
 */
public final class Plot extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:coin.algorithm.grpc.service.generated.Plot)
    PlotOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Plot.newBuilder() to construct.
  private Plot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Plot() {
    name_ = "";
    color_ = "";
    style_ = 0;
    valueList_ = emptyFloatList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Plot();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_Plot_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_Plot_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Plot.class, Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile Object name_ = "";
  /**
   * <code>string name = 1;</code>
   * @return The name.
   */
  @Override
  public String getName() {
    Object ref = name_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    Object ref = name_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLOR_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile Object color_ = "";
  /**
   * <code>string color = 2;</code>
   * @return The color.
   */
  @Override
  public String getColor() {
    Object ref = color_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      color_ = s;
      return s;
    }
  }
  /**
   * <code>string color = 2;</code>
   * @return The bytes for color.
   */
  @Override
  public com.google.protobuf.ByteString
      getColorBytes() {
    Object ref = color_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      color_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STYLE_FIELD_NUMBER = 3;
  private int style_ = 0;
  /**
   * <code>.coin.algorithm.grpc.service.generated.PlotStyle style = 3;</code>
   * @return The enum numeric value on the wire for style.
   */
  @Override public int getStyleValue() {
    return style_;
  }
  /**
   * <code>.coin.algorithm.grpc.service.generated.PlotStyle style = 3;</code>
   * @return The style.
   */
  @Override public PlotStyle getStyle() {
    PlotStyle result = PlotStyle.forNumber(style_);
    return result == null ? PlotStyle.UNRECOGNIZED : result;
  }

  public static final int PRICEPRECISION_FIELD_NUMBER = 4;
  private int pricePrecision_ = 0;
  /**
   * <code>int32 pricePrecision = 4;</code>
   * @return The pricePrecision.
   */
  @Override
  public int getPricePrecision() {
    return pricePrecision_;
  }

  public static final int VALUELIST_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.FloatList valueList_ =
      emptyFloatList();
  /**
   * <code>repeated float valueList = 5;</code>
   * @return A list containing the valueList.
   */
  @Override
  public java.util.List<Float>
      getValueListList() {
    return valueList_;
  }
  /**
   * <code>repeated float valueList = 5;</code>
   * @return The count of valueList.
   */
  public int getValueListCount() {
    return valueList_.size();
  }
  /**
   * <code>repeated float valueList = 5;</code>
   * @param index The index of the element to return.
   * @return The valueList at the given index.
   */
  public float getValueList(int index) {
    return valueList_.getFloat(index);
  }
  private int valueListMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(color_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, color_);
    }
    if (style_ != PlotStyle.LINE.getNumber()) {
      output.writeEnum(3, style_);
    }
    if (pricePrecision_ != 0) {
      output.writeInt32(4, pricePrecision_);
    }
    if (getValueListList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(valueListMemoizedSerializedSize);
    }
    for (int i = 0; i < valueList_.size(); i++) {
      output.writeFloatNoTag(valueList_.getFloat(i));
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(color_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, color_);
    }
    if (style_ != PlotStyle.LINE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, style_);
    }
    if (pricePrecision_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, pricePrecision_);
    }
    {
      int dataSize = 0;
      dataSize = 4 * getValueListList().size();
      size += dataSize;
      if (!getValueListList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      valueListMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Plot)) {
      return super.equals(obj);
    }
    Plot other = (Plot) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getColor()
        .equals(other.getColor())) return false;
    if (style_ != other.style_) return false;
    if (getPricePrecision()
        != other.getPricePrecision()) return false;
    if (!getValueListList()
        .equals(other.getValueListList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + COLOR_FIELD_NUMBER;
    hash = (53 * hash) + getColor().hashCode();
    hash = (37 * hash) + STYLE_FIELD_NUMBER;
    hash = (53 * hash) + style_;
    hash = (37 * hash) + PRICEPRECISION_FIELD_NUMBER;
    hash = (53 * hash) + getPricePrecision();
    if (getValueListCount() > 0) {
      hash = (37 * hash) + VALUELIST_FIELD_NUMBER;
      hash = (53 * hash) + getValueListList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Plot parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Plot parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Plot parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Plot parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Plot parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Plot parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Plot parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Plot parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static Plot parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static Plot parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Plot parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Plot parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Plot prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code coin.algorithm.grpc.service.generated.Plot}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:coin.algorithm.grpc.service.generated.Plot)
      PlotOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_Plot_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_Plot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Plot.class, Builder.class);
    }

    // Construct using coin.algorithm.grpc.service.Plot.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      color_ = "";
      style_ = 0;
      pricePrecision_ = 0;
      valueList_ = emptyFloatList();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_Plot_descriptor;
    }

    @Override
    public Plot getDefaultInstanceForType() {
      return Plot.getDefaultInstance();
    }

    @Override
    public Plot build() {
      Plot result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Plot buildPartial() {
      Plot result = new Plot(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(Plot result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.color_ = color_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.style_ = style_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.pricePrecision_ = pricePrecision_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        valueList_.makeImmutable();
        result.valueList_ = valueList_;
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Plot) {
        return mergeFrom((Plot)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Plot other) {
      if (other == Plot.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getColor().isEmpty()) {
        color_ = other.color_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.style_ != 0) {
        setStyleValue(other.getStyleValue());
      }
      if (other.getPricePrecision() != 0) {
        setPricePrecision(other.getPricePrecision());
      }
      if (!other.valueList_.isEmpty()) {
        if (valueList_.isEmpty()) {
          valueList_ = other.valueList_;
          valueList_.makeImmutable();
          bitField0_ |= 0x00000010;
        } else {
          ensureValueListIsMutable();
          valueList_.addAll(other.valueList_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              color_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              style_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              pricePrecision_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 45: {
              float v = input.readFloat();
              ensureValueListIsMutable();
              valueList_.addFloat(v);
              break;
            } // case 45
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              int alloc = length > 4096 ? 4096 : length;
              ensureValueListIsMutable(alloc / 4);
              while (input.getBytesUntilLimit() > 0) {
                valueList_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private Object name_ = "";
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    public String getName() {
      Object ref = name_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private Object color_ = "";
    /**
     * <code>string color = 2;</code>
     * @return The color.
     */
    public String getColor() {
      Object ref = color_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        color_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string color = 2;</code>
     * @return The bytes for color.
     */
    public com.google.protobuf.ByteString
        getColorBytes() {
      Object ref = color_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        color_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string color = 2;</code>
     * @param value The color to set.
     * @return This builder for chaining.
     */
    public Builder setColor(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      color_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string color = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearColor() {
      color_ = getDefaultInstance().getColor();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string color = 2;</code>
     * @param value The bytes for color to set.
     * @return This builder for chaining.
     */
    public Builder setColorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      color_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int style_ = 0;
    /**
     * <code>.coin.algorithm.grpc.service.generated.PlotStyle style = 3;</code>
     * @return The enum numeric value on the wire for style.
     */
    @Override public int getStyleValue() {
      return style_;
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.PlotStyle style = 3;</code>
     * @param value The enum numeric value on the wire for style to set.
     * @return This builder for chaining.
     */
    public Builder setStyleValue(int value) {
      style_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.PlotStyle style = 3;</code>
     * @return The style.
     */
    @Override
    public PlotStyle getStyle() {
      PlotStyle result = PlotStyle.forNumber(style_);
      return result == null ? PlotStyle.UNRECOGNIZED : result;
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.PlotStyle style = 3;</code>
     * @param value The style to set.
     * @return This builder for chaining.
     */
    public Builder setStyle(PlotStyle value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      style_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.coin.algorithm.grpc.service.generated.PlotStyle style = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearStyle() {
      bitField0_ = (bitField0_ & ~0x00000004);
      style_ = 0;
      onChanged();
      return this;
    }

    private int pricePrecision_ ;
    /**
     * <code>int32 pricePrecision = 4;</code>
     * @return The pricePrecision.
     */
    @Override
    public int getPricePrecision() {
      return pricePrecision_;
    }
    /**
     * <code>int32 pricePrecision = 4;</code>
     * @param value The pricePrecision to set.
     * @return This builder for chaining.
     */
    public Builder setPricePrecision(int value) {

      pricePrecision_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int32 pricePrecision = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPricePrecision() {
      bitField0_ = (bitField0_ & ~0x00000008);
      pricePrecision_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList valueList_ = emptyFloatList();
    private void ensureValueListIsMutable() {
      if (!valueList_.isModifiable()) {
        valueList_ = makeMutableCopy(valueList_);
      }
      bitField0_ |= 0x00000010;
    }
    private void ensureValueListIsMutable(int capacity) {
      if (!valueList_.isModifiable()) {
        valueList_ = makeMutableCopy(valueList_, capacity);
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>repeated float valueList = 5;</code>
     * @return A list containing the valueList.
     */
    public java.util.List<Float>
        getValueListList() {
      valueList_.makeImmutable();
      return valueList_;
    }
    /**
     * <code>repeated float valueList = 5;</code>
     * @return The count of valueList.
     */
    public int getValueListCount() {
      return valueList_.size();
    }
    /**
     * <code>repeated float valueList = 5;</code>
     * @param index The index of the element to return.
     * @return The valueList at the given index.
     */
    public float getValueList(int index) {
      return valueList_.getFloat(index);
    }
    /**
     * <code>repeated float valueList = 5;</code>
     * @param index The index to set the value at.
     * @param value The valueList to set.
     * @return This builder for chaining.
     */
    public Builder setValueList(
        int index, float value) {

      ensureValueListIsMutable();
      valueList_.setFloat(index, value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float valueList = 5;</code>
     * @param value The valueList to add.
     * @return This builder for chaining.
     */
    public Builder addValueList(float value) {

      ensureValueListIsMutable();
      valueList_.addFloat(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float valueList = 5;</code>
     * @param values The valueList to add.
     * @return This builder for chaining.
     */
    public Builder addAllValueList(
        Iterable<? extends Float> values) {
      ensureValueListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, valueList_);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>repeated float valueList = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearValueList() {
      valueList_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:coin.algorithm.grpc.service.generated.Plot)
  }

  // @@protoc_insertion_point(class_scope:coin.algorithm.grpc.service.generated.Plot)
  private static final Plot DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Plot();
  }

  public static Plot getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Plot>
      PARSER = new com.google.protobuf.AbstractParser<Plot>() {
    @Override
    public Plot parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Plot> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Plot> getParserForType() {
    return PARSER;
  }

  @Override
  public Plot getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

