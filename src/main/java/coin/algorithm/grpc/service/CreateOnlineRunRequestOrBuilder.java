// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coin_service.proto

// Protobuf Java Version: 3.25.1
package coin.algorithm.grpc.service;

public interface CreateOnlineRunRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:coin.algorithm.grpc.service.generated.CreateOnlineRunRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string exchange = 1;</code>
   * @return The exchange.
   */
  String getExchange();
  /**
   * <code>string exchange = 1;</code>
   * @return The bytes for exchange.
   */
  com.google.protobuf.ByteString
      getExchangeBytes();

  /**
   * <code>int32 mainInterval = 2;</code>
   * @return The mainInterval.
   */
  int getMainInterval();

  /**
   * <code>repeated int32 otherIntervals = 3;</code>
   * @return A list containing the otherIntervals.
   */
  java.util.List<Integer> getOtherIntervalsList();
  /**
   * <code>repeated int32 otherIntervals = 3;</code>
   * @return The count of otherIntervals.
   */
  int getOtherIntervalsCount();
  /**
   * <code>repeated int32 otherIntervals = 3;</code>
   * @param index The index of the element to return.
   * @return The otherIntervals at the given index.
   */
  int getOtherIntervals(int index);

  /**
   * <code>repeated int32 btcDomIntervals = 15;</code>
   * @return A list containing the btcDomIntervals.
   */
  java.util.List<Integer> getBtcDomIntervalsList();
  /**
   * <code>repeated int32 btcDomIntervals = 15;</code>
   * @return The count of btcDomIntervals.
   */
  int getBtcDomIntervalsCount();
  /**
   * <code>repeated int32 btcDomIntervals = 15;</code>
   * @param index The index of the element to return.
   * @return The btcDomIntervals at the given index.
   */
  int getBtcDomIntervals(int index);

  /**
   * <code>string symbol = 4;</code>
   * @return The symbol.
   */
  String getSymbol();
  /**
   * <code>string symbol = 4;</code>
   * @return The bytes for symbol.
   */
  com.google.protobuf.ByteString
      getSymbolBytes();

  /**
   * <code>int32 pricePrecision = 5;</code>
   * @return The pricePrecision.
   */
  int getPricePrecision();

  /**
   * <code>int32 quantityPrecision = 6;</code>
   * @return The quantityPrecision.
   */
  int getQuantityPrecision();

  /**
   * <code>int32 tickSize = 7;</code>
   * @return The tickSize.
   */
  int getTickSize();

  /**
   * <code>int32 botOrderType = 8;</code>
   * @return The botOrderType.
   */
  int getBotOrderType();

  /**
   * <code>bool isEnableCloseMode = 9;</code>
   * @return The isEnableCloseMode.
   */
  boolean getIsEnableCloseMode();

  /**
   * <code>int32 initBar = 10;</code>
   * @return The initBar.
   */
  int getInitBar();

  /**
   * <code>double initBalance = 11;</code>
   * @return The initBalance.
   */
  double getInitBalance();

  /**
   * <code>double makerFee = 12;</code>
   * @return The makerFee.
   */
  double getMakerFee();

  /**
   * <code>double takerFee = 13;</code>
   * @return The takerFee.
   */
  double getTakerFee();

  /**
   * <code>map&lt;string, string&gt; config = 14;</code>
   */
  int getConfigCount();
  /**
   * <code>map&lt;string, string&gt; config = 14;</code>
   */
  boolean containsConfig(
      String key);
  /**
   * Use {@link #getConfigMap()} instead.
   */
  @Deprecated
  java.util.Map<String, String>
  getConfig();
  /**
   * <code>map&lt;string, string&gt; config = 14;</code>
   */
  java.util.Map<String, String>
  getConfigMap();
  /**
   * <code>map&lt;string, string&gt; config = 14;</code>
   */
  /* nullable */
String getConfigOrDefault(
      String key,
      /* nullable */
String defaultValue);
  /**
   * <code>map&lt;string, string&gt; config = 14;</code>
   */
  String getConfigOrThrow(
      String key);
}
