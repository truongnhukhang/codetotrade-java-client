// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coin_service.proto

// Protobuf Java Version: 3.25.1
package coin.algorithm.grpc.service;

/**
 * Protobuf type {@code coin.algorithm.grpc.service.generated.CreateOnlineRunRequest}
 */
public final class CreateOnlineRunRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:coin.algorithm.grpc.service.generated.CreateOnlineRunRequest)
    CreateOnlineRunRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CreateOnlineRunRequest.newBuilder() to construct.
  private CreateOnlineRunRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CreateOnlineRunRequest() {
    exchange_ = "";
    otherIntervals_ = emptyIntList();
    btcDomIntervals_ = emptyIntList();
    symbol_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new CreateOnlineRunRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineRunRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 14:
        return internalGetConfig();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineRunRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            CreateOnlineRunRequest.class, Builder.class);
  }

  public static final int EXCHANGE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile Object exchange_ = "";
  /**
   * <code>string exchange = 1;</code>
   * @return The exchange.
   */
  @Override
  public String getExchange() {
    Object ref = exchange_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      exchange_ = s;
      return s;
    }
  }
  /**
   * <code>string exchange = 1;</code>
   * @return The bytes for exchange.
   */
  @Override
  public com.google.protobuf.ByteString
      getExchangeBytes() {
    Object ref = exchange_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      exchange_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAININTERVAL_FIELD_NUMBER = 2;
  private int mainInterval_ = 0;
  /**
   * <code>int32 mainInterval = 2;</code>
   * @return The mainInterval.
   */
  @Override
  public int getMainInterval() {
    return mainInterval_;
  }

  public static final int OTHERINTERVALS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList otherIntervals_ =
      emptyIntList();
  /**
   * <code>repeated int32 otherIntervals = 3;</code>
   * @return A list containing the otherIntervals.
   */
  @Override
  public java.util.List<Integer>
      getOtherIntervalsList() {
    return otherIntervals_;
  }
  /**
   * <code>repeated int32 otherIntervals = 3;</code>
   * @return The count of otherIntervals.
   */
  public int getOtherIntervalsCount() {
    return otherIntervals_.size();
  }
  /**
   * <code>repeated int32 otherIntervals = 3;</code>
   * @param index The index of the element to return.
   * @return The otherIntervals at the given index.
   */
  public int getOtherIntervals(int index) {
    return otherIntervals_.getInt(index);
  }
  private int otherIntervalsMemoizedSerializedSize = -1;

  public static final int BTCDOMINTERVALS_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList btcDomIntervals_ =
      emptyIntList();
  /**
   * <code>repeated int32 btcDomIntervals = 15;</code>
   * @return A list containing the btcDomIntervals.
   */
  @Override
  public java.util.List<Integer>
      getBtcDomIntervalsList() {
    return btcDomIntervals_;
  }
  /**
   * <code>repeated int32 btcDomIntervals = 15;</code>
   * @return The count of btcDomIntervals.
   */
  public int getBtcDomIntervalsCount() {
    return btcDomIntervals_.size();
  }
  /**
   * <code>repeated int32 btcDomIntervals = 15;</code>
   * @param index The index of the element to return.
   * @return The btcDomIntervals at the given index.
   */
  public int getBtcDomIntervals(int index) {
    return btcDomIntervals_.getInt(index);
  }
  private int btcDomIntervalsMemoizedSerializedSize = -1;

  public static final int SYMBOL_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile Object symbol_ = "";
  /**
   * <code>string symbol = 4;</code>
   * @return The symbol.
   */
  @Override
  public String getSymbol() {
    Object ref = symbol_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      symbol_ = s;
      return s;
    }
  }
  /**
   * <code>string symbol = 4;</code>
   * @return The bytes for symbol.
   */
  @Override
  public com.google.protobuf.ByteString
      getSymbolBytes() {
    Object ref = symbol_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      symbol_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRICEPRECISION_FIELD_NUMBER = 5;
  private int pricePrecision_ = 0;
  /**
   * <code>int32 pricePrecision = 5;</code>
   * @return The pricePrecision.
   */
  @Override
  public int getPricePrecision() {
    return pricePrecision_;
  }

  public static final int QUANTITYPRECISION_FIELD_NUMBER = 6;
  private int quantityPrecision_ = 0;
  /**
   * <code>int32 quantityPrecision = 6;</code>
   * @return The quantityPrecision.
   */
  @Override
  public int getQuantityPrecision() {
    return quantityPrecision_;
  }

  public static final int TICKSIZE_FIELD_NUMBER = 7;
  private int tickSize_ = 0;
  /**
   * <code>int32 tickSize = 7;</code>
   * @return The tickSize.
   */
  @Override
  public int getTickSize() {
    return tickSize_;
  }

  public static final int BOTORDERTYPE_FIELD_NUMBER = 8;
  private int botOrderType_ = 0;
  /**
   * <code>int32 botOrderType = 8;</code>
   * @return The botOrderType.
   */
  @Override
  public int getBotOrderType() {
    return botOrderType_;
  }

  public static final int ISENABLECLOSEMODE_FIELD_NUMBER = 9;
  private boolean isEnableCloseMode_ = false;
  /**
   * <code>bool isEnableCloseMode = 9;</code>
   * @return The isEnableCloseMode.
   */
  @Override
  public boolean getIsEnableCloseMode() {
    return isEnableCloseMode_;
  }

  public static final int INITBAR_FIELD_NUMBER = 10;
  private int initBar_ = 0;
  /**
   * <code>int32 initBar = 10;</code>
   * @return The initBar.
   */
  @Override
  public int getInitBar() {
    return initBar_;
  }

  public static final int INITBALANCE_FIELD_NUMBER = 11;
  private double initBalance_ = 0D;
  /**
   * <code>double initBalance = 11;</code>
   * @return The initBalance.
   */
  @Override
  public double getInitBalance() {
    return initBalance_;
  }

  public static final int MAKERFEE_FIELD_NUMBER = 12;
  private double makerFee_ = 0D;
  /**
   * <code>double makerFee = 12;</code>
   * @return The makerFee.
   */
  @Override
  public double getMakerFee() {
    return makerFee_;
  }

  public static final int TAKERFEE_FIELD_NUMBER = 13;
  private double takerFee_ = 0D;
  /**
   * <code>double takerFee = 13;</code>
   * @return The takerFee.
   */
  @Override
  public double getTakerFee() {
    return takerFee_;
  }

  public static final int CONFIG_FIELD_NUMBER = 14;
  private static final class ConfigDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, String> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, String>newDefaultInstance(
                CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineRunRequest_ConfigEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      String, String> config_;
  private com.google.protobuf.MapField<String, String>
  internalGetConfig() {
    if (config_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ConfigDefaultEntryHolder.defaultEntry);
    }
    return config_;
  }
  public int getConfigCount() {
    return internalGetConfig().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; config = 14;</code>
   */
  @Override
  public boolean containsConfig(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetConfig().getMap().containsKey(key);
  }
  /**
   * Use {@link #getConfigMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, String> getConfig() {
    return getConfigMap();
  }
  /**
   * <code>map&lt;string, string&gt; config = 14;</code>
   */
  @Override
  public java.util.Map<String, String> getConfigMap() {
    return internalGetConfig().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; config = 14;</code>
   */
  @Override
  public /* nullable */
String getConfigOrDefault(
      String key,
      /* nullable */
String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetConfig().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; config = 14;</code>
   */
  @Override
  public String getConfigOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, String> map =
        internalGetConfig().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exchange_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, exchange_);
    }
    if (mainInterval_ != 0) {
      output.writeInt32(2, mainInterval_);
    }
    if (getOtherIntervalsList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(otherIntervalsMemoizedSerializedSize);
    }
    for (int i = 0; i < otherIntervals_.size(); i++) {
      output.writeInt32NoTag(otherIntervals_.getInt(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbol_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, symbol_);
    }
    if (pricePrecision_ != 0) {
      output.writeInt32(5, pricePrecision_);
    }
    if (quantityPrecision_ != 0) {
      output.writeInt32(6, quantityPrecision_);
    }
    if (tickSize_ != 0) {
      output.writeInt32(7, tickSize_);
    }
    if (botOrderType_ != 0) {
      output.writeInt32(8, botOrderType_);
    }
    if (isEnableCloseMode_ != false) {
      output.writeBool(9, isEnableCloseMode_);
    }
    if (initBar_ != 0) {
      output.writeInt32(10, initBar_);
    }
    if (Double.doubleToRawLongBits(initBalance_) != 0) {
      output.writeDouble(11, initBalance_);
    }
    if (Double.doubleToRawLongBits(makerFee_) != 0) {
      output.writeDouble(12, makerFee_);
    }
    if (Double.doubleToRawLongBits(takerFee_) != 0) {
      output.writeDouble(13, takerFee_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetConfig(),
        ConfigDefaultEntryHolder.defaultEntry,
        14);
    if (getBtcDomIntervalsList().size() > 0) {
      output.writeUInt32NoTag(122);
      output.writeUInt32NoTag(btcDomIntervalsMemoizedSerializedSize);
    }
    for (int i = 0; i < btcDomIntervals_.size(); i++) {
      output.writeInt32NoTag(btcDomIntervals_.getInt(i));
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exchange_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, exchange_);
    }
    if (mainInterval_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, mainInterval_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < otherIntervals_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(otherIntervals_.getInt(i));
      }
      size += dataSize;
      if (!getOtherIntervalsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      otherIntervalsMemoizedSerializedSize = dataSize;
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbol_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, symbol_);
    }
    if (pricePrecision_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, pricePrecision_);
    }
    if (quantityPrecision_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, quantityPrecision_);
    }
    if (tickSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, tickSize_);
    }
    if (botOrderType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, botOrderType_);
    }
    if (isEnableCloseMode_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, isEnableCloseMode_);
    }
    if (initBar_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, initBar_);
    }
    if (Double.doubleToRawLongBits(initBalance_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(11, initBalance_);
    }
    if (Double.doubleToRawLongBits(makerFee_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(12, makerFee_);
    }
    if (Double.doubleToRawLongBits(takerFee_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(13, takerFee_);
    }
    for (java.util.Map.Entry<String, String> entry
         : internalGetConfig().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, String>
      config__ = ConfigDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, config__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < btcDomIntervals_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(btcDomIntervals_.getInt(i));
      }
      size += dataSize;
      if (!getBtcDomIntervalsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      btcDomIntervalsMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof CreateOnlineRunRequest)) {
      return super.equals(obj);
    }
    CreateOnlineRunRequest other = (CreateOnlineRunRequest) obj;

    if (!getExchange()
        .equals(other.getExchange())) return false;
    if (getMainInterval()
        != other.getMainInterval()) return false;
    if (!getOtherIntervalsList()
        .equals(other.getOtherIntervalsList())) return false;
    if (!getBtcDomIntervalsList()
        .equals(other.getBtcDomIntervalsList())) return false;
    if (!getSymbol()
        .equals(other.getSymbol())) return false;
    if (getPricePrecision()
        != other.getPricePrecision()) return false;
    if (getQuantityPrecision()
        != other.getQuantityPrecision()) return false;
    if (getTickSize()
        != other.getTickSize()) return false;
    if (getBotOrderType()
        != other.getBotOrderType()) return false;
    if (getIsEnableCloseMode()
        != other.getIsEnableCloseMode()) return false;
    if (getInitBar()
        != other.getInitBar()) return false;
    if (Double.doubleToLongBits(getInitBalance())
        != Double.doubleToLongBits(
            other.getInitBalance())) return false;
    if (Double.doubleToLongBits(getMakerFee())
        != Double.doubleToLongBits(
            other.getMakerFee())) return false;
    if (Double.doubleToLongBits(getTakerFee())
        != Double.doubleToLongBits(
            other.getTakerFee())) return false;
    if (!internalGetConfig().equals(
        other.internalGetConfig())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + EXCHANGE_FIELD_NUMBER;
    hash = (53 * hash) + getExchange().hashCode();
    hash = (37 * hash) + MAININTERVAL_FIELD_NUMBER;
    hash = (53 * hash) + getMainInterval();
    if (getOtherIntervalsCount() > 0) {
      hash = (37 * hash) + OTHERINTERVALS_FIELD_NUMBER;
      hash = (53 * hash) + getOtherIntervalsList().hashCode();
    }
    if (getBtcDomIntervalsCount() > 0) {
      hash = (37 * hash) + BTCDOMINTERVALS_FIELD_NUMBER;
      hash = (53 * hash) + getBtcDomIntervalsList().hashCode();
    }
    hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
    hash = (53 * hash) + getSymbol().hashCode();
    hash = (37 * hash) + PRICEPRECISION_FIELD_NUMBER;
    hash = (53 * hash) + getPricePrecision();
    hash = (37 * hash) + QUANTITYPRECISION_FIELD_NUMBER;
    hash = (53 * hash) + getQuantityPrecision();
    hash = (37 * hash) + TICKSIZE_FIELD_NUMBER;
    hash = (53 * hash) + getTickSize();
    hash = (37 * hash) + BOTORDERTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getBotOrderType();
    hash = (37 * hash) + ISENABLECLOSEMODE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsEnableCloseMode());
    hash = (37 * hash) + INITBAR_FIELD_NUMBER;
    hash = (53 * hash) + getInitBar();
    hash = (37 * hash) + INITBALANCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getInitBalance()));
    hash = (37 * hash) + MAKERFEE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getMakerFee()));
    hash = (37 * hash) + TAKERFEE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getTakerFee()));
    if (!internalGetConfig().getMap().isEmpty()) {
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + internalGetConfig().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static CreateOnlineRunRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CreateOnlineRunRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CreateOnlineRunRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CreateOnlineRunRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CreateOnlineRunRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CreateOnlineRunRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CreateOnlineRunRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static CreateOnlineRunRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static CreateOnlineRunRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static CreateOnlineRunRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static CreateOnlineRunRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static CreateOnlineRunRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(CreateOnlineRunRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code coin.algorithm.grpc.service.generated.CreateOnlineRunRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:coin.algorithm.grpc.service.generated.CreateOnlineRunRequest)
      CreateOnlineRunRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineRunRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 14:
          return internalGetConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 14:
          return internalGetMutableConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineRunRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CreateOnlineRunRequest.class, Builder.class);
    }

    // Construct using coin.algorithm.grpc.service.CreateOnlineRunRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      exchange_ = "";
      mainInterval_ = 0;
      otherIntervals_ = emptyIntList();
      btcDomIntervals_ = emptyIntList();
      symbol_ = "";
      pricePrecision_ = 0;
      quantityPrecision_ = 0;
      tickSize_ = 0;
      botOrderType_ = 0;
      isEnableCloseMode_ = false;
      initBar_ = 0;
      initBalance_ = 0D;
      makerFee_ = 0D;
      takerFee_ = 0D;
      internalGetMutableConfig().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CoinService.internal_static_coin_algorithm_grpc_service_generated_CreateOnlineRunRequest_descriptor;
    }

    @Override
    public CreateOnlineRunRequest getDefaultInstanceForType() {
      return CreateOnlineRunRequest.getDefaultInstance();
    }

    @Override
    public CreateOnlineRunRequest build() {
      CreateOnlineRunRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public CreateOnlineRunRequest buildPartial() {
      CreateOnlineRunRequest result = new CreateOnlineRunRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(CreateOnlineRunRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.exchange_ = exchange_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.mainInterval_ = mainInterval_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        otherIntervals_.makeImmutable();
        result.otherIntervals_ = otherIntervals_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        btcDomIntervals_.makeImmutable();
        result.btcDomIntervals_ = btcDomIntervals_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.symbol_ = symbol_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.pricePrecision_ = pricePrecision_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.quantityPrecision_ = quantityPrecision_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.tickSize_ = tickSize_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.botOrderType_ = botOrderType_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.isEnableCloseMode_ = isEnableCloseMode_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.initBar_ = initBar_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.initBalance_ = initBalance_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.makerFee_ = makerFee_;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.takerFee_ = takerFee_;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.config_ = internalGetConfig();
        result.config_.makeImmutable();
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof CreateOnlineRunRequest) {
        return mergeFrom((CreateOnlineRunRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(CreateOnlineRunRequest other) {
      if (other == CreateOnlineRunRequest.getDefaultInstance()) return this;
      if (!other.getExchange().isEmpty()) {
        exchange_ = other.exchange_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getMainInterval() != 0) {
        setMainInterval(other.getMainInterval());
      }
      if (!other.otherIntervals_.isEmpty()) {
        if (otherIntervals_.isEmpty()) {
          otherIntervals_ = other.otherIntervals_;
          otherIntervals_.makeImmutable();
          bitField0_ |= 0x00000004;
        } else {
          ensureOtherIntervalsIsMutable();
          otherIntervals_.addAll(other.otherIntervals_);
        }
        onChanged();
      }
      if (!other.btcDomIntervals_.isEmpty()) {
        if (btcDomIntervals_.isEmpty()) {
          btcDomIntervals_ = other.btcDomIntervals_;
          btcDomIntervals_.makeImmutable();
          bitField0_ |= 0x00000008;
        } else {
          ensureBtcDomIntervalsIsMutable();
          btcDomIntervals_.addAll(other.btcDomIntervals_);
        }
        onChanged();
      }
      if (!other.getSymbol().isEmpty()) {
        symbol_ = other.symbol_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getPricePrecision() != 0) {
        setPricePrecision(other.getPricePrecision());
      }
      if (other.getQuantityPrecision() != 0) {
        setQuantityPrecision(other.getQuantityPrecision());
      }
      if (other.getTickSize() != 0) {
        setTickSize(other.getTickSize());
      }
      if (other.getBotOrderType() != 0) {
        setBotOrderType(other.getBotOrderType());
      }
      if (other.getIsEnableCloseMode() != false) {
        setIsEnableCloseMode(other.getIsEnableCloseMode());
      }
      if (other.getInitBar() != 0) {
        setInitBar(other.getInitBar());
      }
      if (other.getInitBalance() != 0D) {
        setInitBalance(other.getInitBalance());
      }
      if (other.getMakerFee() != 0D) {
        setMakerFee(other.getMakerFee());
      }
      if (other.getTakerFee() != 0D) {
        setTakerFee(other.getTakerFee());
      }
      internalGetMutableConfig().mergeFrom(
          other.internalGetConfig());
      bitField0_ |= 0x00004000;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              exchange_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              mainInterval_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              int v = input.readInt32();
              ensureOtherIntervalsIsMutable();
              otherIntervals_.addInt(v);
              break;
            } // case 24
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureOtherIntervalsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                otherIntervals_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 26
            case 34: {
              symbol_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 34
            case 40: {
              pricePrecision_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 40
            case 48: {
              quantityPrecision_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 48
            case 56: {
              tickSize_ = input.readInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 56
            case 64: {
              botOrderType_ = input.readInt32();
              bitField0_ |= 0x00000100;
              break;
            } // case 64
            case 72: {
              isEnableCloseMode_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 72
            case 80: {
              initBar_ = input.readInt32();
              bitField0_ |= 0x00000400;
              break;
            } // case 80
            case 89: {
              initBalance_ = input.readDouble();
              bitField0_ |= 0x00000800;
              break;
            } // case 89
            case 97: {
              makerFee_ = input.readDouble();
              bitField0_ |= 0x00001000;
              break;
            } // case 97
            case 105: {
              takerFee_ = input.readDouble();
              bitField0_ |= 0x00002000;
              break;
            } // case 105
            case 114: {
              com.google.protobuf.MapEntry<String, String>
              config__ = input.readMessage(
                  ConfigDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableConfig().getMutableMap().put(
                  config__.getKey(), config__.getValue());
              bitField0_ |= 0x00004000;
              break;
            } // case 114
            case 120: {
              int v = input.readInt32();
              ensureBtcDomIntervalsIsMutable();
              btcDomIntervals_.addInt(v);
              break;
            } // case 120
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureBtcDomIntervalsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                btcDomIntervals_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 122
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private Object exchange_ = "";
    /**
     * <code>string exchange = 1;</code>
     * @return The exchange.
     */
    public String getExchange() {
      Object ref = exchange_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        exchange_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string exchange = 1;</code>
     * @return The bytes for exchange.
     */
    public com.google.protobuf.ByteString
        getExchangeBytes() {
      Object ref = exchange_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        exchange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string exchange = 1;</code>
     * @param value The exchange to set.
     * @return This builder for chaining.
     */
    public Builder setExchange(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      exchange_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string exchange = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearExchange() {
      exchange_ = getDefaultInstance().getExchange();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string exchange = 1;</code>
     * @param value The bytes for exchange to set.
     * @return This builder for chaining.
     */
    public Builder setExchangeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      exchange_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int mainInterval_ ;
    /**
     * <code>int32 mainInterval = 2;</code>
     * @return The mainInterval.
     */
    @Override
    public int getMainInterval() {
      return mainInterval_;
    }
    /**
     * <code>int32 mainInterval = 2;</code>
     * @param value The mainInterval to set.
     * @return This builder for chaining.
     */
    public Builder setMainInterval(int value) {

      mainInterval_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int32 mainInterval = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMainInterval() {
      bitField0_ = (bitField0_ & ~0x00000002);
      mainInterval_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList otherIntervals_ = emptyIntList();
    private void ensureOtherIntervalsIsMutable() {
      if (!otherIntervals_.isModifiable()) {
        otherIntervals_ = makeMutableCopy(otherIntervals_);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>repeated int32 otherIntervals = 3;</code>
     * @return A list containing the otherIntervals.
     */
    public java.util.List<Integer>
        getOtherIntervalsList() {
      otherIntervals_.makeImmutable();
      return otherIntervals_;
    }
    /**
     * <code>repeated int32 otherIntervals = 3;</code>
     * @return The count of otherIntervals.
     */
    public int getOtherIntervalsCount() {
      return otherIntervals_.size();
    }
    /**
     * <code>repeated int32 otherIntervals = 3;</code>
     * @param index The index of the element to return.
     * @return The otherIntervals at the given index.
     */
    public int getOtherIntervals(int index) {
      return otherIntervals_.getInt(index);
    }
    /**
     * <code>repeated int32 otherIntervals = 3;</code>
     * @param index The index to set the value at.
     * @param value The otherIntervals to set.
     * @return This builder for chaining.
     */
    public Builder setOtherIntervals(
        int index, int value) {

      ensureOtherIntervalsIsMutable();
      otherIntervals_.setInt(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 otherIntervals = 3;</code>
     * @param value The otherIntervals to add.
     * @return This builder for chaining.
     */
    public Builder addOtherIntervals(int value) {

      ensureOtherIntervalsIsMutable();
      otherIntervals_.addInt(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 otherIntervals = 3;</code>
     * @param values The otherIntervals to add.
     * @return This builder for chaining.
     */
    public Builder addAllOtherIntervals(
        Iterable<? extends Integer> values) {
      ensureOtherIntervalsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, otherIntervals_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 otherIntervals = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOtherIntervals() {
      otherIntervals_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList btcDomIntervals_ = emptyIntList();
    private void ensureBtcDomIntervalsIsMutable() {
      if (!btcDomIntervals_.isModifiable()) {
        btcDomIntervals_ = makeMutableCopy(btcDomIntervals_);
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>repeated int32 btcDomIntervals = 15;</code>
     * @return A list containing the btcDomIntervals.
     */
    public java.util.List<Integer>
        getBtcDomIntervalsList() {
      btcDomIntervals_.makeImmutable();
      return btcDomIntervals_;
    }
    /**
     * <code>repeated int32 btcDomIntervals = 15;</code>
     * @return The count of btcDomIntervals.
     */
    public int getBtcDomIntervalsCount() {
      return btcDomIntervals_.size();
    }
    /**
     * <code>repeated int32 btcDomIntervals = 15;</code>
     * @param index The index of the element to return.
     * @return The btcDomIntervals at the given index.
     */
    public int getBtcDomIntervals(int index) {
      return btcDomIntervals_.getInt(index);
    }
    /**
     * <code>repeated int32 btcDomIntervals = 15;</code>
     * @param index The index to set the value at.
     * @param value The btcDomIntervals to set.
     * @return This builder for chaining.
     */
    public Builder setBtcDomIntervals(
        int index, int value) {

      ensureBtcDomIntervalsIsMutable();
      btcDomIntervals_.setInt(index, value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 btcDomIntervals = 15;</code>
     * @param value The btcDomIntervals to add.
     * @return This builder for chaining.
     */
    public Builder addBtcDomIntervals(int value) {

      ensureBtcDomIntervalsIsMutable();
      btcDomIntervals_.addInt(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 btcDomIntervals = 15;</code>
     * @param values The btcDomIntervals to add.
     * @return This builder for chaining.
     */
    public Builder addAllBtcDomIntervals(
        Iterable<? extends Integer> values) {
      ensureBtcDomIntervalsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, btcDomIntervals_);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 btcDomIntervals = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearBtcDomIntervals() {
      btcDomIntervals_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private Object symbol_ = "";
    /**
     * <code>string symbol = 4;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string symbol = 4;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string symbol = 4;</code>
     * @param value The symbol to set.
     * @return This builder for chaining.
     */
    public Builder setSymbol(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      symbol_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>string symbol = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSymbol() {
      symbol_ = getDefaultInstance().getSymbol();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <code>string symbol = 4;</code>
     * @param value The bytes for symbol to set.
     * @return This builder for chaining.
     */
    public Builder setSymbolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      symbol_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private int pricePrecision_ ;
    /**
     * <code>int32 pricePrecision = 5;</code>
     * @return The pricePrecision.
     */
    @Override
    public int getPricePrecision() {
      return pricePrecision_;
    }
    /**
     * <code>int32 pricePrecision = 5;</code>
     * @param value The pricePrecision to set.
     * @return This builder for chaining.
     */
    public Builder setPricePrecision(int value) {

      pricePrecision_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>int32 pricePrecision = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPricePrecision() {
      bitField0_ = (bitField0_ & ~0x00000020);
      pricePrecision_ = 0;
      onChanged();
      return this;
    }

    private int quantityPrecision_ ;
    /**
     * <code>int32 quantityPrecision = 6;</code>
     * @return The quantityPrecision.
     */
    @Override
    public int getQuantityPrecision() {
      return quantityPrecision_;
    }
    /**
     * <code>int32 quantityPrecision = 6;</code>
     * @param value The quantityPrecision to set.
     * @return This builder for chaining.
     */
    public Builder setQuantityPrecision(int value) {

      quantityPrecision_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>int32 quantityPrecision = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearQuantityPrecision() {
      bitField0_ = (bitField0_ & ~0x00000040);
      quantityPrecision_ = 0;
      onChanged();
      return this;
    }

    private int tickSize_ ;
    /**
     * <code>int32 tickSize = 7;</code>
     * @return The tickSize.
     */
    @Override
    public int getTickSize() {
      return tickSize_;
    }
    /**
     * <code>int32 tickSize = 7;</code>
     * @param value The tickSize to set.
     * @return This builder for chaining.
     */
    public Builder setTickSize(int value) {

      tickSize_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>int32 tickSize = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTickSize() {
      bitField0_ = (bitField0_ & ~0x00000080);
      tickSize_ = 0;
      onChanged();
      return this;
    }

    private int botOrderType_ ;
    /**
     * <code>int32 botOrderType = 8;</code>
     * @return The botOrderType.
     */
    @Override
    public int getBotOrderType() {
      return botOrderType_;
    }
    /**
     * <code>int32 botOrderType = 8;</code>
     * @param value The botOrderType to set.
     * @return This builder for chaining.
     */
    public Builder setBotOrderType(int value) {

      botOrderType_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>int32 botOrderType = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearBotOrderType() {
      bitField0_ = (bitField0_ & ~0x00000100);
      botOrderType_ = 0;
      onChanged();
      return this;
    }

    private boolean isEnableCloseMode_ ;
    /**
     * <code>bool isEnableCloseMode = 9;</code>
     * @return The isEnableCloseMode.
     */
    @Override
    public boolean getIsEnableCloseMode() {
      return isEnableCloseMode_;
    }
    /**
     * <code>bool isEnableCloseMode = 9;</code>
     * @param value The isEnableCloseMode to set.
     * @return This builder for chaining.
     */
    public Builder setIsEnableCloseMode(boolean value) {

      isEnableCloseMode_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <code>bool isEnableCloseMode = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsEnableCloseMode() {
      bitField0_ = (bitField0_ & ~0x00000200);
      isEnableCloseMode_ = false;
      onChanged();
      return this;
    }

    private int initBar_ ;
    /**
     * <code>int32 initBar = 10;</code>
     * @return The initBar.
     */
    @Override
    public int getInitBar() {
      return initBar_;
    }
    /**
     * <code>int32 initBar = 10;</code>
     * @param value The initBar to set.
     * @return This builder for chaining.
     */
    public Builder setInitBar(int value) {

      initBar_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <code>int32 initBar = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearInitBar() {
      bitField0_ = (bitField0_ & ~0x00000400);
      initBar_ = 0;
      onChanged();
      return this;
    }

    private double initBalance_ ;
    /**
     * <code>double initBalance = 11;</code>
     * @return The initBalance.
     */
    @Override
    public double getInitBalance() {
      return initBalance_;
    }
    /**
     * <code>double initBalance = 11;</code>
     * @param value The initBalance to set.
     * @return This builder for chaining.
     */
    public Builder setInitBalance(double value) {

      initBalance_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <code>double initBalance = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearInitBalance() {
      bitField0_ = (bitField0_ & ~0x00000800);
      initBalance_ = 0D;
      onChanged();
      return this;
    }

    private double makerFee_ ;
    /**
     * <code>double makerFee = 12;</code>
     * @return The makerFee.
     */
    @Override
    public double getMakerFee() {
      return makerFee_;
    }
    /**
     * <code>double makerFee = 12;</code>
     * @param value The makerFee to set.
     * @return This builder for chaining.
     */
    public Builder setMakerFee(double value) {

      makerFee_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <code>double makerFee = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearMakerFee() {
      bitField0_ = (bitField0_ & ~0x00001000);
      makerFee_ = 0D;
      onChanged();
      return this;
    }

    private double takerFee_ ;
    /**
     * <code>double takerFee = 13;</code>
     * @return The takerFee.
     */
    @Override
    public double getTakerFee() {
      return takerFee_;
    }
    /**
     * <code>double takerFee = 13;</code>
     * @param value The takerFee to set.
     * @return This builder for chaining.
     */
    public Builder setTakerFee(double value) {

      takerFee_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <code>double takerFee = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearTakerFee() {
      bitField0_ = (bitField0_ & ~0x00002000);
      takerFee_ = 0D;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        String, String> config_;
    private com.google.protobuf.MapField<String, String>
        internalGetConfig() {
      if (config_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ConfigDefaultEntryHolder.defaultEntry);
      }
      return config_;
    }
    private com.google.protobuf.MapField<String, String>
        internalGetMutableConfig() {
      if (config_ == null) {
        config_ = com.google.protobuf.MapField.newMapField(
            ConfigDefaultEntryHolder.defaultEntry);
      }
      if (!config_.isMutable()) {
        config_ = config_.copy();
      }
      bitField0_ |= 0x00004000;
      onChanged();
      return config_;
    }
    public int getConfigCount() {
      return internalGetConfig().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; config = 14;</code>
     */
    @Override
    public boolean containsConfig(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetConfig().getMap().containsKey(key);
    }
    /**
     * Use {@link #getConfigMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getConfig() {
      return getConfigMap();
    }
    /**
     * <code>map&lt;string, string&gt; config = 14;</code>
     */
    @Override
    public java.util.Map<String, String> getConfigMap() {
      return internalGetConfig().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; config = 14;</code>
     */
    @Override
    public /* nullable */
String getConfigOrDefault(
        String key,
        /* nullable */
String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetConfig().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; config = 14;</code>
     */
    @Override
    public String getConfigOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, String> map =
          internalGetConfig().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearConfig() {
      bitField0_ = (bitField0_ & ~0x00004000);
      internalGetMutableConfig().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; config = 14;</code>
     */
    public Builder removeConfig(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableConfig().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, String>
        getMutableConfig() {
      bitField0_ |= 0x00004000;
      return internalGetMutableConfig().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; config = 14;</code>
     */
    public Builder putConfig(
        String key,
        String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableConfig().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00004000;
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; config = 14;</code>
     */
    public Builder putAllConfig(
        java.util.Map<String, String> values) {
      internalGetMutableConfig().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00004000;
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:coin.algorithm.grpc.service.generated.CreateOnlineRunRequest)
  }

  // @@protoc_insertion_point(class_scope:coin.algorithm.grpc.service.generated.CreateOnlineRunRequest)
  private static final CreateOnlineRunRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new CreateOnlineRunRequest();
  }

  public static CreateOnlineRunRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreateOnlineRunRequest>
      PARSER = new com.google.protobuf.AbstractParser<CreateOnlineRunRequest>() {
    @Override
    public CreateOnlineRunRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CreateOnlineRunRequest> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<CreateOnlineRunRequest> getParserForType() {
    return PARSER;
  }

  @Override
  public CreateOnlineRunRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

